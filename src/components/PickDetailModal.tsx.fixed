import { Fragment } from 'react';
import { Dialog, Transition } from '@headlessui/react';
import { X, Heart, MessageSquare } from 'lucide-react';
import { PickImage } from './PickImage';
import type { Pick } from '../types';
import DOMPurify from 'dompurify';
import { Skeleton } from '../components/ui/skeleton';
import { formatDistanceToNow } from 'date-fns';

type PickDetailModalProps = {
  isOpen: boolean;
  onClose: () => void;
  pickId: string | null;
  pickData: Pick | null;
  isLoading: boolean;
  onNavigate?: (pickId: string) => void;
};

export function PickDetailModal({ isOpen, onClose, pickData, isLoading }: PickDetailModalProps) {
  return (
    <Transition appear show={isOpen} as={Fragment}>
      <Dialog as="div" className="relative z-50" onClose={onClose}>
        <Transition.Child
          as={Fragment}
          enter="ease-out duration-300"
          enterFrom="opacity-0"
          enterTo="opacity-100"
          leave="ease-in duration-200"
          leaveFrom="opacity-100"
          leaveTo="opacity-0"
        >
          <div className="fixed inset-0 bg-black bg-opacity-70" />
        </Transition.Child>

        <div className="fixed inset-0 overflow-y-auto">
          <div className="flex min-h-full items-center justify-center p-4 text-center">
            <Transition.Child
              as={Fragment}
              enter="ease-out duration-300"
              enterFrom="opacity-0 scale-95"
              enterTo="opacity-100 scale-100"
              leave="ease-in duration-200"
              leaveFrom="opacity-100 scale-100"
              leaveTo="opacity-0 scale-95"
            >
              <Dialog.Panel className="w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all">
                {/* Close button - top right */}
                <div className="absolute right-4 top-4">
                  <button
                    type="button"
                    className="rounded-full p-1 text-gray-400 hover:bg-gray-100 hover:text-gray-500"
                    onClick={onClose}
                  >
                    <X className="h-5 w-5" />
                  </button>
                </div>
                
                {/* Picked by section */}
                <div className="mb-6">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center space-x-2">
                      <span className="text-sm uppercase text-gray-500 font-medium">Picked by</span>
                      <div className="flex items-center space-x-2">
                        {pickData?.profile?.avatar_url ? (
                          <img 
                            src={pickData.profile.avatar_url} 
                            alt={pickData.profile.full_name || ''}
                            className="h-8 w-8 rounded-full object-cover" 
                          />
                        ) : null}
                        <span className="text-base font-medium">
                          {pickData?.profile?.full_name || 'Anonymous'}
                        </span>
                      </div>
                    </div>
                    <span className="text-sm text-gray-500">
                      {pickData?.created_at ? formatDistanceToNow(new Date(pickData.created_at), { addSuffix: true }) : '9 days ago'}
                    </span>
                  </div>
                </div>

                {isLoading || !pickData ? (
                  // Loading state
                  <div className="flex flex-col space-y-4 p-4">
                    <Skeleton className="h-64 w-full rounded-lg" />
                    <div className="space-y-2">
                      <Skeleton className="h-6 w-3/4" />
                      <Skeleton className="h-4 w-full" />
                      <Skeleton className="h-4 w-full" />
                      <Skeleton className="h-4 w-2/3" />
                    </div>
                  </div>
                ) : (
                  <div className="flex flex-col">
                    {/* Title and author */}
                    <div className="mb-4">
                      <h2 className="text-2xl font-normal text-[#252525]">
                        {pickData.title}
                      </h2>
                      <div className="mt-1 text-base text-gray-600">
                        By {pickData.reference || 'Unknown'}
                      </div>
                    </div>
                    
                    {/* Category tags */}
                    <div className="mb-4 flex space-x-2">
                      {pickData.category && (
                        <span className="inline-block rounded bg-gray-100 px-2 py-1 text-xs uppercase tracking-wide text-gray-600">
                          {pickData.category.toUpperCase()}
                        </span>
                      )}
                      {pickData.category === 'books' && (
                        <span className="inline-block rounded bg-gray-100 px-2 py-1 text-xs uppercase tracking-wide text-gray-600">
                          DESIGN
                        </span>
                      )}
                    </div>
                    
                    {/* Main image */}
                    <div className="mb-4 overflow-hidden rounded-lg">
                      <div className="relative">
                        <PickImage 
                          src={pickData.image_url || ''} 
                          alt={pickData.title || ''} 
                          className="w-full object-cover"
                          aspectRatio="square"
                          variant="detail"
                        />
                      </div>
                    </div>
                    
                    {/* Like and comment counts */}
                    <div className="mb-6 flex items-center space-x-4">
                      <div className="flex items-center space-x-1">
                        <Heart className="h-4 w-4" />
                        <span className="text-sm">1.4K</span>
                      </div>
                      <div className="flex items-center space-x-1">
                        <MessageSquare className="h-4 w-4" />
                        <span className="text-sm">21</span>
                      </div>
                    </div>
                      
                    {/* About the book section */}
                    <div className="mb-6">
                      <h4 className="mb-4 text-xs font-medium uppercase tracking-wide text-gray-500">ABOUT THE BOOK</h4>
                      <div 
                        className="prose prose-sm max-w-none text-[#252525]" 
                        dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(pickData.description || '') }}
                      />
                    </div>
                  </div>
                )}
              </Dialog.Panel>
            </Transition.Child>
          </div>
        </div>
      </Dialog>
    </Transition>
  );
}

export default PickDetailModal;
